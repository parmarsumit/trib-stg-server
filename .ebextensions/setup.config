files:
  "/etc/default/docker":
    mode: "000444"
    content: |
      DOCKER_OPTS="--no-cache --force-rm"
  "/etc/nginx/conf.d/proxy.conf" :
    mode: "000755"
    owner: root
    group: root
    content: |
      client_max_body_size 20M;
  "/etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      log_format main-ilot '$http_x_forwarded_for - $remote_user [$time_local] "$host" "$request" '
        '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" $request_time';
            {% for service in services %}
        server {
        listen {{container.ip}}:80;
        server_name {{service.interface.cname}};

        root {{service.path}}/www;

        location /.well-known/ {
            auth_basic          off;
        }
        location / {
            root {{service.path}}/www;
            return 301 https://$host$request_uri;
        }
        access_log {{container_path}}/logs/acces.ilot-{{service.interface.cname}}.log main-ilot;
        error_log {{container_path}}/logs/error.ilot-{{service.interface.cname}}.log warn;
        }

        server {
        listen {{container.ip}}:443 ssl;

        ssl    on;
        ssl_certificate    	{{container_path}}/conf/certificate.{{service.id}}.pem;
        ssl_certificate_key   {{container_path}}/conf/key.{{service.id}}.pem;
        {% if not DEBUG %}
            ssl_session_timeout 5m;
            ssl_protocols  SSLv2 SSLv3 TLSv1;
            ssl_ciphers  HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers on;
        {% else %}
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        {% endif %}
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;

        ssl_dhparam {{container_path}}/conf/dhparam.pem;

        server_name {{service.interface.cname}};
        root {{service.path}}/www;

        index index.html;

        client_max_body_size 8M;

        access_log {{container_path}}/logs/nginx.acces.{{service.interface.cname}}.log main-ilot;
        error_log {{container_path}}/logs/nginx.error.{{service.interface.cname}}.log warn;

        location ~* ^/static/(.+)$ {
            root {{service.path}};
            try_files /static/$1
                    {{container_path}}/static/$1
                    @ilot;
        }

        location ~* ^/media/(.+)$ {
            root {{service.path}};
            try_files /media/$1
                    {{container_path}}/media/$1
                    @ilot;
        }

        location / {
            root {{service.path}}/www;
            try_files $uri $uri/index.html @ilot;
        }

        location @ilot{
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_connect_timeout 1h;
            proxy_send_timeout 1h;
            proxy_read_timeout 1h;

            proxy_pass https://ilot-{{service.id}};
        }
        }

        upstream ilot-{{service.id}} {
        {% for process in service.get_configured_processes %}
            server 127.0.0.1:{{process.port}} fail_timeout=0;
        {% endfor %}
        }
        {% endfor %}